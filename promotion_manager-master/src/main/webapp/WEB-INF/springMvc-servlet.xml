<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

    <context:property-placeholder location="classpath:cfg_${cfg.env}.properties"/>
    
    <!-- 支持注解方式mvc -->
    <mvc:annotation-driven />

    <task:annotation-driven />

    <!-- 自动扫描注解方式的bean -->
    <context:component-scan base-package="com"/>

    <!--interceptors 1，日志 2，登录 3，moss上报-->
    <mvc:interceptors>
        <!--<bean class="com.jami.springmvc.interceptor.AuthInterceptor" />-->
        <bean class="com.jami.springmvc.interceptor.LoggingInterceptor" />
        <bean class="com.jami.springmvc.interceptor.AuthInterceptor">
            <property name="unAuthUrls">
                <set>
                    <value>/api/login</value>
                    <value>/api/controller</value>
                    <value>/api/appmsg/query_article</value>
                </set>
            </property>
        </bean>
        <bean class="com.jami.springmvc.interceptor.MCInterceptor" />
    </mvc:interceptors>

    <!--开启事务支持-->
    <!-- transaction support-->
    <!-- PlatformTransactionMnager -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <!-- enable transaction annotation support -->
    <tx:annotation-driven transaction-manager="txManager" />


    <!-- exceptionHandler -->
    <bean class="com.jami.springmvc.resolver.JamiHandlerExceptionResolver">
        <property name="order" value="0"/>
    </bean>


    <!-- jsp视图解释类 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <property name="prefix" value="/WEB-INF/jsp/"/>  
        <property name="suffix" value=".jsp"/>  
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />  
    </bean>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="30000000" />
    </bean>

    <!-- json视图解释类 -->
    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManager">
        <constructor-arg>
            <bean class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">
                <constructor-arg>
                    <map>
                        <entry key="xhtml" value="text/html"/>
                        <entry key="json" value="application/json"/>
                    </map>
                </constructor-arg>
            </bean>
        </constructor-arg>
    </bean>

    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="contentNegotiationManager" ref="contentNegotiationManager">
        </property>
        <property name="defaultViews">
            <list>
                <!-- ModelAndView里的数据变成JSON -->
                <bean class="com.jami.springmvc.view.JamiMappingJsonView" />
            </list>
        </property>
    </bean>


    <!--dataSource配置-->
    <bean id="dataSource" class="org.apache.ibatis.datasource.pooled.PooledDataSource">
        <property name="driver" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://${dbhost}/${dbname}?useUnicode=true&amp;characterEncoding=utf-8"/>
        <property name="username" value="${dbuser}"/>
        <property name="password" value="${dbpwd}"/>
        <property name="poolPingEnabled" value="true"/>
        <property name="poolPingQuery" value="select now()"/>
        <property name="poolPingConnectionsNotUsedFor" value="300"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis-conf/conf.xml"/>
    </bean>

    <!-- 自动扫描mybatis mapper -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        <property name="basePackage" value="com.youzijie" />
        <property name="markerInterface" value="com.jami.common.BaseMapper" />
    </bean>

    <task:scheduled-tasks>
        <task:scheduled ref="appMsgServiceImpl" method="publishJob" cron="0 */10 * * * ?"/>
    </task:scheduled-tasks>
</beans>